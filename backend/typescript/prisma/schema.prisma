generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model test {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model user {
  id                      String                    @id @default(auto()) @map("_id") @db.ObjectId
  authId                  String
  email                   String
  firstName               String
  lastName                String
  role                    Role
  serviceRequests         serviceRequest[]
  volunteerRequestSignUp  volunteerRequestSignUp[]
  volunteerPlatformSignUp volunteerPlatformSignUp[]
}

model volunteerRequestSignUp {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  user     user    @relation(fields: [userId], references: [id])
  userId   String  @db.ObjectId
  complete Boolean @default(false)

  serviceRequest   serviceRequest @relation(fields: [serviceRequestId], references: [id])
  serviceRequestId String         @db.ObjectId
}

model serviceRequest {
  id            String                   @id @default(auto()) @map("_id") @db.ObjectId
  requestName   String
  requester     user                     @relation(fields: [requesterId], references: [id])
  requesterId   String                   @db.ObjectId
  location      String
  shiftTime     DateTime?
  description   String?
  meal          String?
  cookingMethod String?
  frequency     String?
  requestType   ServiceRequestType
  volunteers    volunteerRequestSignUp[]
}

model volunteerPlatformSignUp {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  lastName  String
  admin     user   @relation(fields: [admin_id], references: [id])
  admin_id  String @db.ObjectId
  status    Status
}

enum Role {
  VOLUNTEER
  ADMIN
}

enum ServiceRequestType {
  SITE
  KITCHEN
}

enum Status {
  PENDING
  ACCEPTED
}
