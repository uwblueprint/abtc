generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model test {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model user {
  id                        String           @id @default(auto()) @map("_id") @db.ObjectId
  authId                    String
  email                     String
  firstName                 String
  lastName                  String
  phoneNumber               String
  emergencyFirstName        String
  emergencyLastName         String
  emergencyPhoneNumber      String
  role                      Role
  isAccepted                Status
  createdAt                 String?
  assignedServiceRequestIds String[]         @db.ObjectId // For volunteers
  assignedServiceRequests   serviceRequest[] @relation(name: "assignee", fields: [assignedServiceRequestIds], references: [id])
  requestedServiceRequests  serviceRequest[] @relation(name: "requester") // For admins
}

model serviceRequest {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  requestName   String
  requesterId   String             @db.ObjectId
  requester     user               @relation(name: "requester", fields: [requesterId], references: [id]) // Admin requester
  assigneeIds   String[]           @db.ObjectId
  assignees     user[]             @relation(name: "assignee", fields: [assigneeIds], references: [id]) // Volunteers
  location      String
  shiftTime     DateTime?
  shiftEndTime  DateTime?
  description   String?
  meal          String?
  cookingMethod CookingMethod?
  frequency     Frequency?
  requestType   ServiceRequestType
  createdAt     String?
}

model platformSignUp {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  firstName String
  lastName  String
  status    Status
  createdAt String?
}

enum Role {
  VOLUNTEER
  ADMIN
}

enum ServiceRequestType {
  SITE
  KITCHEN
}

enum CookingMethod {
  BAKE
  BOIL
  FRY
  GRILL
  ROAST
  STEAM
}

enum Frequency {
  NEVER
  DAILY
  WEEKLY
  MONTHLY
}

enum Status {
  PENDING
  ACCEPTED
}
